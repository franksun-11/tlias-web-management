<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.example.mapper.StudentMapper">

    <!-- 结果映射：列名 -> Student 字段（不包含 clazzName，clazzName 在 Service 中补充） -->
    <resultMap id="StudentResultMap" type="org.example.pojo.Student">
        <id     column="id"               property="id"/>
        <result column="name"             property="name"/>
        <result column="no"               property="no"/>
        <result column="gender"           property="gender"/>
        <result column="phone"            property="phone"/>
        <result column="id_card"          property="idCard"/>
        <result column="is_college"       property="isCollege"/>
        <result column="address"          property="address"/>
        <result column="degree"           property="degree"/>
        <result column="graduation_date"  property="graduationDate"/>
        <result column="clazz_id"         property="clazzId"/>
        <result column="violation_count"  property="violationCount"/>
        <result column="violation_score"  property="violationScore"/>
        <result column="create_time"      property="createTime"/>
        <result column="update_time"      property="updateTime"/>
    </resultMap>
    <!--新增员工-->
    <insert id="insert" parameterType="org.example.pojo.Student"
            useGeneratedKeys="true" keyProperty="id">
        insert into student
        (
            name, no, gender, phone, id_card, is_college, address, degree,
            graduation_date, clazz_id, violation_count, violation_score,
            create_time, update_time
        )
        values
            (
                #{name}, #{no}, #{gender}, #{phone}, #{idCard}, #{isCollege}, #{address}, #{degree},
                #{graduationDate}, #{clazzId}, #{violationCount}, #{violationScore},
                #{createTime}, #{updateTime}
            )
    </insert>
    <!-- 修改员工 -->
    <update id="updateById">
        update student
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="no != null and no != ''">
                no = #{no},
            </if>
            <if test="gender != null and gender != ''">
                gender = #{gender},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="idCard != null and idCard != ''">
                id_card = #{idCard},
            </if>
            <if test="isCollege != null">
                is_college = #{isCollege},
            </if>
            <if test="address != null and address != ''">
                address = #{address},
            </if>
            <if test="degree != null and degree != ''">
                degree = #{degree},
            </if>
            <if test="graduationDate != null">
                graduation_date = #{graduationDate},
            </if>
            <if test="clazzId != null">
                clazz_id = #{clazzId},
            </if>
            <if test="violationCount != null">
                violation_count = #{violationCount},
            </if>
            <if test="violationScore != null">
                violation_score = #{violationScore},
            </if>
            update_time = NOW(),
        </set>
        where id = #{id}
    </update>

    <!--批量删除学员-->
    <delete id="deleteByIds">
        delete from student where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>


    <!-- 条件查询 + 按最后操作时间倒序；分页交给 PageHelper.startPage -->
    <select id="list" parameterType="org.example.pojo.StudentQueryParam"
            resultMap="StudentResultMap">
        select
        id,
        name,
        no,
        gender,
        phone,
        id_card,
        is_college,
        address,
        degree,
        graduation_date,
        clazz_id,
        violation_count,
        violation_score,
        create_time,
        update_time
        from student
        <where>
            <if test="name != null and name != ''">
                and name like concat('%', #{name}, '%')
            </if>
            <if test="degree != null">
                and degree = #{degree}
            </if>
            <if test="clazzId != null">
                and clazz_id = #{clazzId}
            </if>
        </where>
        order by update_time desc
    </select>

</mapper>